name: Automatic IIS Deployment with Backup and Rollback

on:
  push:
    branches:
      - site

jobs:
  deploy:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3


    - name: Run Deployment Script
      id: deploy-step
      shell: pwsh
      run: |
        try {
          Write-Host "üîπ Starting backup and deployment..."
          # Run the deployment script and capture output
          pwsh -File .\deploy\run.ps1
      
          Write-Host "‚úÖ Deployment completed successfully"
          echo "DEPLOY_STATUS=success" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "DEPLOY_MESSAGE=Deployment completed successfully" | Out-File -FilePath $env:GITHUB_ENV -Append
        }
        catch {
          Write-Host "‚ùå Deployment failed. Rolling back..."
          # Run the rollback script
          pwsh -File .\deploy\rollback.ps1
      
          # Save the failure message for the email
          echo "DEPLOY_STATUS=failure" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "DEPLOY_MESSAGE=Deployment failed: $($_.Exception.Message)" | Out-File -FilePath $env:GITHUB_ENV -Append
          exit 1
        }


    - name: Send Email Notification
      if: always()   # Always run this step whether success or failure
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "RASAN Website Deployment Status: ${{ env.DEPLOY_STATUS }}"
        to: "ashjan.aljbreen@gmail.com"
        from: "ashjannnnnnn@gmail.com"
        body: |
          Deployment Status: **${{ env.DEPLOY_STATUS }}**

          Details:
          ${{ env.DEPLOY_MESSAGE }}

          - If status is "success": The site was deployed successfully.
          - If status is "failure": The deployment failed and the last backup was restored.
