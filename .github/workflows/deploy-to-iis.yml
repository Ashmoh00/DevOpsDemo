name: Automatic IIS Deployment with Backup and Rollback

on:
  push:
    branches:
      - main   # Trigger only when pushing to the main branch

jobs:
  deploy:
    runs-on: windows-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Setup PowerShell
      uses: actions/setup-powershell@v2

    - name: Run Deployment Script
      id: deploy-step
      shell: pwsh
      run: |
        try {
          Write-Host "Starting backup and deployment..."
          .\deploy\run.ps1
          Write-Host "Deployment completed successfully ✅"
          echo "DEPLOY_STATUS=success" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "DEPLOY_MESSAGE=Deployment completed successfully" | Out-File -FilePath $env:GITHUB_ENV -Append
        }
        catch {
          Write-Host "Deployment failed ❌. Rolling back..."
          .\deploy\rollback.ps1
          echo "DEPLOY_STATUS=failure" | Out-File -FilePath $env:GITHUB_ENV -Append
          echo "DEPLOY_MESSAGE=Deployment failed: $($_.Exception.Message)" | Out-File -FilePath $env:GITHUB_ENV -Append
          exit 1
        }

    - name: Send Email Notification
      if: always()   # Always run this step whether success or failure
      uses: dawidd6/action-send-mail@v3
      with:
        server_address: smtp.gmail.com
        server_port: 465
        username: ${{ secrets.EMAIL_USERNAME }}
        password: ${{ secrets.EMAIL_PASSWORD }}
        subject: "RASAN Website Deployment Status: ${{ env.DEPLOY_STATUS }}"
        to: "your-email@domain.com"
        from: "rasan@company.com"
        body: |
          Deployment Status: **${{ env.DEPLOY_STATUS }}**

          Details:
          ${{ env.DEPLOY_MESSAGE }}

          - If status is "success": The site was deployed successfully.
          - If status is "failure": The deployment failed and the last backup was restored.
